------- === GUI Library Setup ===
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("All Islands Teleport", "DarkTheme")

-- === Tabs ===
local TeleportTab = Window:NewTab("Main")
local TeleportSection = TeleportTab:NewSection("Teleport Controls")

local TravelTab = Window:NewTab("Island Travel")
local TravelSection = TravelTab:NewSection("Quick TP Buttons")

local TrainTab = Window:NewTab("Train")
local TrainSection = TrainTab:NewSection("Training Features")

local AutoTab = Window:NewTab("Auto")
local AutoSection = AutoTab:NewSection("Automation")

local ShopTab = Window:NewTab("Shop")
local ShopSection = ShopTab:NewSection("Shop Items")

local LunarVolcanoTab = Window:NewTab("Lunar/Volcano")
local LunarVolcanoSection = LunarVolcanoTab:NewSection("Special Teleports & Lava")

-- === Initialization ===
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")
local islandsFolder = workspace:WaitForChild("Islands")
local explorerFolder = workspace:FindFirstChild("Explorer")

player.CharacterAdded:Connect(function(newChar)
    character = newChar
    hrp = character:WaitForChild("HumanoidRootPart")
end)

-- === Island Configuration ===
local islandConfigs = {
    ["Mainland"] = {},
    ["Forest Island"] = {},
    ["Mountain Island"] = {},
    ["Lunar Islands"] = {},
    ["Royal Island"] = {},
    ["Blizzard Island"] = {},
    ["Jungle Island"] = {},
    ["Volcano Island"] = {},
    ["Desert Island"] = {},
    ["Glacier Island"] = {},
}

-- === Universal Exclusions ===
local EXCLUSIONS = {
    ["{84b93b68-b932-4db8-b765-d1bd9ef8aae9}"]=true,
    ["{c5769905-aecf-4d7a-ada9-064802b0cae9}"]=true,
    ["{d2227f02-c482-4911-b201-7e842b31c47c}"]=true,
    ["{6b019e60-21c6-4536-9a06-4cbfee80d88f}"]=true,
    ["{12916ad6-7fd9-46d5-8bc1-e69671249721}"]=true,
    ["{2c0549c7-f2d0-4828-bc2a-6d484e792cdd}"]=true,
    ["{de31ac95-029b-4c26-b9f8-4b61faed7335}"]=true,
    ["{fd489389-537f-40e1-bd1a-c048522d23bc}"]=true,
    ["{f1f04024-ba69-4d0f-9fee-4f93758c1bfc}"]=true,
    ["{980efa15-9598-4070-b1c2-344bd80cce25}"]=true,
    ["Horse"]=true,
    ["Travel Boat"]=true,
    ["c21e5cba-8957-4d65-9e54-1aaa2411a71c"]=true,
}

-- === Tool UUIDs per group ===
local TOOL_UUIDS_123 = {"{4ba69e17-8de2-43a2-ac9a-f1d1e425be9b}","{634dc3c2-1694-4273-92d2-adf8f7ade91f}","{51ba4466-f758-4d1c-970d-aad27326dbaf}","{06905d54-7826-417e-bfc7-82d326a30885}"}
local TOOL_UUIDS_456 = {"{b3766c24-da18-40f0-be56-66dba5e882d8}","{cd4c34c5-99a6-4f28-ac73-bfad7c8e1ca2}","{efe4b787-0112-42f2-a83c-659149e1de5c}","{91c7c7cc-0b88-4450-9cd5-18063fa4fea0}"}
local TOOL_UUIDS_789 = {"{634dc3c2-1694-4273-92d2-adf8f7ade91f}","{06905d54-7826-417e-bfc7-82d326a30885}","{5dab28e4-4bfb-430b-86fe-530bafa237b5}","{cd4c34c5-99a6-4f28-ac73-bfad7c8e1ca2}"}

-- === Remote ===
local remote = game:GetService("ReplicatedStorage"):WaitForChild("Communication"):WaitForChild("Events"):GetChildren()[10]

-- === Utility Functions ===
local function isUUID(name)
    return typeof(name)=="string" and name:match("^%b{}$")~=nil
end

local function safeFire(remote, tools, model)
    pcall(function()
        for _, tool in ipairs(tools) do
            remote:FireServer(tool,"Activate",model)
        end
    end)
end

local function getAllBodies(islandName)
    local bodies = {}

    -- Workspace direct children
    for _, model in ipairs(workspace:GetChildren()) do
        if model:IsA("Model") and isUUID(model.Name) and not EXCLUSIONS[model.Name] then
            local body = model:FindFirstChild("Body")
            if body and body:IsA("BasePart") then
                table.insert(bodies, body)
            end
        end
    end

    -- Islands folder
    local folder = islandsFolder:FindFirstChild(islandName)
    if folder then
        for _, model in ipairs(folder:GetChildren()) do
            if not EXCLUSIONS[model.Name] then
                local body = model:FindFirstChild("Body")
                if body and body:IsA("BasePart") then
                    table.insert(bodies, body)
                end
            end
        end
    end

    -- Explorer folder
    if explorerFolder then
        local folder = explorerFolder:FindFirstChild(islandName)
        if folder then
            for _, model in ipairs(folder:GetChildren()) do
                if not EXCLUSIONS[model.Name] then
                    local body = model:FindFirstChild("Body")
                    if body and body:IsA("BasePart") then
                        table.insert(bodies, body)
                    end
                end
            end
        end
    end

    return bodies
end

-- === Teleport Toggles for Main Tab ===
local teleportToggles = {}
for islandName, _ in pairs(islandConfigs) do
    teleportToggles[islandName] = false
    TeleportSection:NewToggle("Teleport "..islandName,"Teleport to "..islandName,function(state)
        teleportToggles[islandName] = state
    end)
    task.spawn(function()
        while true do
            if teleportToggles[islandName] then
                local bodies = getAllBodies(islandName)
                if #bodies > 0 then
                    for _, body in ipairs(bodies) do
                        while teleportToggles[islandName] and body:IsDescendantOf(workspace) do
                            hrp.CFrame = CFrame.new(body.Position + Vector3.new(0,5,0))
                            task.wait(0.06)
                        end
                    end
                end
                task.wait(0.8)
            else
                task.wait(1.5)
            end
        end
    end)
end

-- === Travel Buttons ===
for islandName in pairs(islandConfigs) do
    TravelSection:NewButton("Travel to "..islandName,"Use teleport remote",function()
        local args = {"\1","Travel",islandName,1}
        game:GetService("ReplicatedStorage"):WaitForChild("Communication",9e9)
            :WaitForChild("Functions",9e9):GetChildren()[2]:FireServer(unpack(args))
    end)
end

-- === Auto Catch Function ===
local function createAutoCatchToggle(toggleName, tools, islands, delay)
    local toggleEnabled = false
    AutoSection:NewToggle(toggleName,"Auto catches nearby bodies",function(state)
        toggleEnabled = state
        if state then
            task.spawn(function()
                local player = game.Players.LocalPlayer
                local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart") or player.CharacterAdded:Wait():WaitForChild("HumanoidRootPart")
                while toggleEnabled do
                    for _, islandName in ipairs(islands) do
                        local islandFolder = workspace:FindFirstChild("Islands") and workspace.Islands:FindFirstChild(islandName)
                        if islandFolder then
                            for _, model in ipairs(islandFolder:GetChildren()) do
                                if isUUID(model.Name) and not EXCLUSIONS[model.Name] and model:FindFirstChild("Body") then
                                    local body = model.Body
                                    if body and body:IsDescendantOf(workspace) then
                                        local dist = (body.Position - hrp.Position).Magnitude
                                        if dist <= 15 then
                                            safeFire(remote, tools, model)
                                        end
                                    end
                                end
                            end
                        end
                    end
                    for _, model in ipairs(workspace:GetChildren()) do
                        if isUUID(model.Name) and not EXCLUSIONS[model.Name] and model:FindFirstChild("Body") then
                            local body = model.Body
                            if body and body:IsDescendantOf(workspace) then
                                local dist = (body.Position - hrp.Position).Magnitude
                                if dist <= 15 then
                                    safeFire(remote, tools, model)
                                end
                            end
                        end
                    end
                    task.wait(delay)
                end
            end)
        end
    end)
end

-- === Auto Catch Toggles ===
createAutoCatchToggle("Auto Catch 1,2,3", TOOL_UUIDS_123, {"Mainland","Forest Island","Mountain Island"},0.05)
createAutoCatchToggle("Auto Catch 4,5,6", TOOL_UUIDS_456, {"Mountain Island","Royal Island","Desert Island","Glacier Island"},0.9)
createAutoCatchToggle("Auto Catch 7,8,9", TOOL_UUIDS_789, {"Lunar Islands","Jungle Island","Volcano Island"},0.9)
