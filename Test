local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

--- === Tool UUIDs ===
local TOOL_UUIDS = {
    "{b3766c24-da18-40f0-be56-66dba5e882d8}",
    "{cd4c34c5-99a6-4f28-ac73-bfad7c8e1ca2}",
    "{efe4b787-0112-42f2-a83c-659149e1de5c}",
    "{91c7c7cc-0b88-4450-9cd5-18063fa4fea0}",
}

-- === Exclusions ===
local exclusions = {
    ["{84b93b68-b932-4db8-b765-d1bd9ef8aae9}"] = true,
    ["{c5769905-aecf-4d7a-ada9-064802b0cae9}"] = true,
    ["{d2227f02-c482-4911-b201-7e842b31c47c}"] = true,
    ["{6b019e60-21c6-4536-9a06-4cbfee80d88f}"] = true,
    ["{12916ad6-7fd9-46d5-8bc1-e69671249721}"] = true,
    ["{c91d0e3a-e8c6-4e70-b274-9b7304ffbb28}"] = true,
    ["{2c0549c7-f2d0-4828-bc2a-6d484e792cdd}"] = true,
    ["{de31ac95-029b-4c26-b9f8-4b61faed7335}"] = true,
    ["{fd489389-537f-40e1-bd1a-c048522d23bc}"] = true,
    ["{f1f04024-ba69-4d0f-9fee-4f93758c1bfc}"] = true,
    ["{980efa15-9598-4070-b1c2-344bd80cce25}"] = true,
    ["Horse"] = true,
    ["Travel Boat"] = true,
}

-- === Island Folders ===
local islandFolders = {
    "Mountain Island",
    "Royal Island",
    "Desert Island",
    "Glacier Island",
}

-- === Remote ===
local remote = ReplicatedStorage:WaitForChild("Communication"):WaitForChild("Events"):GetChildren()[10]

-- === Settings ===
local CATCH_RADIUS = 15
local CATCH_COOLDOWN = 0.9
local lastCaught = {}

-- === Utility ===
local function isUUID(name)
    return typeof(name) == "string" and name:match("^%b{}$") ~= nil
end

-- === Main Loop ===
while task.wait(0.05) do
    local playerPos = HumanoidRootPart.Position

    -- Check island folders
    for _, islandName in ipairs(islandFolders) do
        local islandFolder = Workspace:FindFirstChild("Islands"):FindFirstChild(islandName)
        if islandFolder then
            for _, child in ipairs(islandFolder:GetChildren()) do
                local body = child:FindFirstChild("Body")
                if body and isUUID(child.Name) and not exclusions[child.Name] then
                    local dist = (body.Position - playerPos).Magnitude
                    local now = os.clock()
                    if dist <= CATCH_RADIUS and (not lastCaught[child] or now - lastCaught[child] > CATCH_COOLDOWN) then
                        for _, tool in ipairs(TOOL_UUIDS) do
                            remote:FireServer(tool, "Activate", child)
                        end
                        lastCaught[child] = now
                        print("Caught:", child.Name, "at", islandName, "Distance:", math.floor(dist))
                    end
                end
            end
        end
    end

    -- Check top-level Workspace UUID models
    for _, child in ipairs(Workspace:GetChildren()) do
        local body = child:FindFirstChild("Body")
        if body and isUUID(child.Name) and not exclusions[child.Name] then
            local dist = (body.Position - playerPos).Magnitude
            local now = os.clock()
            if dist <= CATCH_RADIUS and (not lastCaught[child] or now - lastCaught[child] > CATCH_COOLDOWN) then
                for _, tool in ipairs(TOOL_UUIDS) do
                    remote:FireServer(tool, "Activate", child)
                end
                lastCaught[child] = now
                print("Caught top-level:", child.Name, "Distance:", math.floor(dist))
            end
        end
    end
end
