----- === GUI Library Setup ===
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("All Islands Teleport", "DarkTheme")

-- === Services ===
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")

-- === Float Above Body Function ===
local function floatAbove(part)
    if not part or not part:IsDescendantOf(workspace) then return end

    -- Move above once
    hrp.CFrame = part.CFrame + Vector3.new(0, 6, 0)

    -- Hover effect
    local bv = Instance.new("BodyVelocity")
    bv.Velocity = Vector3.new(0, 0, 0)
    bv.MaxForce = Vector3.new(4000, 4000, 4000)
    bv.Parent = hrp

    -- Stay until body disappears
    repeat
        task.wait(0.25)
    until not part:IsDescendantOf(workspace)

    bv:Destroy()
end

-- === Scan For Bodies ===
local function getBodies()
    local bodies = {}

    -- 1. Direct children of workspace
    for _, obj in ipairs(workspace:GetChildren()) do
        if obj:IsA("BasePart") and obj.Name == "Body" then
            table.insert(bodies, obj)
        end
    end

    -- 2. Explorer folder
    local explorer = workspace:FindFirstChild("Explorer")
    if explorer then
        for _, obj in ipairs(explorer:GetDescendants()) do
            if obj:IsA("BasePart") and obj.Name == "Body" then
                table.insert(bodies, obj)
            end
        end
    end

    -- 3. UUID body folder
    local uuidFolder = workspace:FindFirstChild("{ab1a3def-0d9e-4ba6-809c-5235f6bb3610}")
    if uuidFolder and uuidFolder:FindFirstChild("Body") then
        for _, obj in ipairs(uuidFolder.Body:GetDescendants()) do
            if obj:IsA("BasePart") and obj.Name == "Body" then
                table.insert(bodies, obj)
            end
        end
    end

    return bodies
end

-- === Float Loop Handler ===
local function makeFloatToggle(section, name, desc)
    local active = false

    local function loop()
        while active do
            local bodies = getBodies()
            if #bodies > 0 then
                for _, body in ipairs(bodies) do
                    if not active then break end
                    floatAbove(body)
                end
            else
                task.wait(10) -- wait before scanning again
            end
        end
    end

    section:NewToggle(name, desc, function(state)
        active = state
        if state then
            task.spawn(loop)
        end
    end)
end

-- === Tabs ===
local TeleportTab = Window:NewTab("Main")
local TeleportSection = TeleportTab:NewSection("Island Teleports")

local TravelTab = Window:NewTab("Island Travel")
local TravelSection = TravelTab:NewSection("Travel Controls")

local LunarTab = Window:NewTab("Lunar/Volcano")
local LunarSection = LunarTab:NewSection("Special Islands")

-- === Toggles (examples, add more as needed) ===
makeFloatToggle(TeleportSection, "Mainland Float", "Float above Bodies on Mainland")
makeFloatToggle(TeleportSection, "Jungle Island Float", "Float above Bodies on Jungle Island")
makeFloatToggle(TravelSection, "Travel Float", "Float above Bodies while Traveling")
makeFloatToggle(LunarSection, "Lunar Island Float", "Float above Bodies on Lunar Island")
makeFloatToggle(LunarSection, "Volcano Island Float", "Float above Bodies on Volcano Island")
