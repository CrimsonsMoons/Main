---- === Load the Library ===
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()

-- === Create Window ===
local Window = Library.CreateLib("All Islands GUI", "DarkTheme")

-- === Universal Exclusions ===
local exclusions = {
    ["{84b93b68-b932-4db8-b765-d1bd9ef8aae9}"] = true,
    ["{c5769905-aecf-4d7a-ada9-064802b0cae9}"] = true,
    ["{d2227f02-c482-4911-b201-7e842b31c47c}"] = true,
    ["{6b019e60-21c6-4536-9a06-4cbfee80d88f}"] = true,
    ["{12916ad6-7fd9-46d5-8bc1-e69671249721}"] = true,
    ["{2c0549c7-f2d0-4828-bc2a-6d484e792cdd}"] = true,
    ["{de31ac95-029b-4c26-b9f8-4b61faed7335}"] = true,
    ["{fd489389-537f-40e1-bd1a-c048522d23bc}"] = true,
    ["{f1f04024-ba69-4d0f-9fee-4f93758c1bfc}"] = true,
    ["Horse"] = true,
    ["Travel Boat"] = true,
    ["c21e5cba-8957-4d65-9e54-1aaa2411a71c"] = true,
}

-- === Main Tab and Section ===
local MainTab = Window:NewTab("Main")
local MainSection = MainTab:NewSection("Island Teleports")

-- === Island Configs ===
local islandConfigs = {
    ["Mainland"] = {},
    ["Forest Island"] = {},
    ["Mountain Island"] = {},
    ["Lunar Islands"] = {},
    ["Royal Island"] = {},
    ["Blizzard Island"] = {},
    ["Jungle Island"] = {},
    ["Volcano Island"] = {},
    ["Desert Island"] = {},
    ["Glacier Island"] = {},
    ["The Magical Forest"] = {},
}

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HRP = Character:WaitForChild("HumanoidRootPart")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

-- === Teleport Function ===
local function teleportToIsland(islandName)
    local islandFolder = Workspace:FindFirstChild("Islands") and Workspace:Islands:FindFirstChild(islandName)
    if not islandFolder then return end

    for _, uuid in pairs(islandFolder:GetChildren()) do
        if not exclusions[uuid.Name] then
            local body = uuid:FindFirstChild("Body")
            if body then
                HRP.CFrame = body.CFrame + Vector3.new(0,5,0) -- 5 studs above the body
                wait(0.5) -- small delay between teleports
            end
        end
    end
end

-- === Create a toggle for each island ===
for islandName, _ in pairs(islandConfigs) do
    MainSection:NewToggle(islandName, "Teleport to "..islandName, function(state)
        if state then
            print("Teleport ON for:", islandName)
            RunService.RenderStepped:Connect(function()
                teleportToIsland(islandName)
            end)
        else
            print("Teleport OFF for:", islandName)
        end
    end)
end
