-- === GUI Library Setup ===
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Pilgrmageddon Automation", "DarkTheme")

-- === Tabs ===
local AutoTab = Window:NewTab("Automation")
local AutoSection = AutoTab:NewSection("Main Controls")

-- === Player / Character Setup ===
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
player.CharacterAdded:Connect(function(char) character = char end)

-- === Functions ===

-- God Mode
local function enableGodMode()
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid:GetPropertyChangedSignal("Health"):Connect(function()
            humanoid.Health = humanoid.MaxHealth
        end)
        humanoid.MaxHealth = math.huge
        humanoid.Health = math.huge
        print("God Mode Enabled")
    end
end

-- Infinite Mana
local function setInfiniteMana()
    local mana = character:FindFirstChild("Mana")
    if mana then
        mana.Changed:Connect(function()
            mana.Value = math.huge
        end)
        mana.Value = math.huge
        print("Infinite Mana Enabled")
    end
end

-- Delete Nametags
local function deleteNametags()
    for _, otherPlayer in pairs(game.Players:GetPlayers()) do
        local nametag = otherPlayer:FindFirstChild("PlayerGui") and otherPlayer.PlayerGui:FindFirstChild("Nametag")
        if nametag then
            nametag:Destroy()
        end
    end
end

-- Auto Chest Finder (toggleable)
local chestRunning = false
local function findAndOpenChests()
    chestRunning = not chestRunning
    while chestRunning do
        for _, chest in pairs(workspace:GetDescendants()) do
            if chest.Name == "Chest" and chest:IsA("Model") and character:FindFirstChild("HumanoidRootPart") then
                character.HumanoidRootPart.CFrame = chest:GetModelCFrame() + Vector3.new(0,3,0)
                task.wait(0.5)
                if chest:FindFirstChild("ClickDetector") then
                    fireclickdetector(chest.ClickDetector)
                end
            end
        end
        task.wait(5)
    end
end

-- Auto Mirror Finder (toggleable)
local mirrorRunning = false
local function findMirrors()
    mirrorRunning = not mirrorRunning
    while mirrorRunning do
        for _, mirror in pairs(workspace:GetDescendants()) do
            if mirror.Name == "Mirror" and character:FindFirstChild("HumanoidRootPart") then
                character.HumanoidRootPart.CFrame = mirror.CFrame + Vector3.new(0,3,0)
                task.wait(0.5)
                if mirror:FindFirstChild("ClickDetector") then
                    fireclickdetector(mirror.ClickDetector)
                end
            end
        end
        task.wait(5)
    end
end

-- High Damage
local function setHighDamage()
    for _, tool in pairs(character:GetChildren()) do
        if tool:IsA("Tool") and tool:FindFirstChild("Handle") then
            local damageValue = tool:FindFirstChild("Damage")
            if damageValue then
                damageValue.Value = 99999
            end
        end
    end
end

-- === GUI Buttons/Toggles ===
AutoSection:NewButton("Enable God Mode", "Prevents dying", enableGodMode)
AutoSection:NewButton("Set Infinite Mana", "Gives unlimited mana", setInfiniteMana)
AutoSection:NewButton("Delete Nametags", "Removes player nametags", deleteNametags)

AutoSection:NewToggle("Auto Chests", "Find and open all chests", function(state)
    if state then
        task.spawn(findAndOpenChests)
    else
        chestRunning = false
    end
end)

AutoSection:NewToggle("Auto Mirrors", "Find and interact with mirrors", function(state)
    if state then
        task.spawn(findMirrors)
    else
        mirrorRunning = false
    end
end)

AutoSection:NewButton("Set High Damage", "Boosts weapon/tool damage", setHighDamage)
