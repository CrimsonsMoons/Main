repeat task.wait() until game:IsLoaded()

--// Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local lp = Players.LocalPlayer
local vu = game:GetService("VirtualUser")

-- Workspace refs
local chests = workspace:WaitForChild("Chests")
local ores = workspace:WaitForChild("Ores")
local npcs = workspace:WaitForChild("NPCs")
local mobs = workspace:WaitForChild("Mobs")

-- Vars
local autofish = false
local showChests = false
local showOre = false
local showShop = false
local meteorNotify = false

--// GUI Creation
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "CustomPilgrammedGUI"
ScreenGui.Parent = game.CoreGui
ScreenGui.ResetOnSpawn = false

local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 350, 0, 400)
MainFrame.Position = UDim2.new(0.3, 0, 0.2, 0)
MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
MainFrame.BorderSizePixel = 0
MainFrame.Active = true
MainFrame.Draggable = true
MainFrame.Parent = ScreenGui

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0, 40)
Title.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Title.Text = "â˜… | Pilgrammed - Custom GUI"
Title.Font = Enum.Font.GothamBold
Title.TextSize = 16
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Parent = MainFrame

-- Tab container
local TabHolder = Instance.new("Frame")
TabHolder.Size = UDim2.new(1, -10, 1, -50)
TabHolder.Position = UDim2.new(0, 5, 0, 45)
TabHolder.BackgroundTransparency = 1
TabHolder.Parent = MainFrame

-- Tab system
local function CreateTab(name)
    local Tab = Instance.new("ScrollingFrame")
    Tab.Name = name
    Tab.Size = UDim2.new(1, 0, 1, 0)
    Tab.BackgroundTransparency = 1
    Tab.ScrollBarThickness = 3
    Tab.Visible = false
    Tab.Parent = TabHolder

    local Layout = Instance.new("UIListLayout")
    Layout.Padding = UDim.new(0, 5)
    Layout.FillDirection = Enum.FillDirection.Vertical
    Layout.Parent = Tab

    return Tab
end

local Tabs = {
    Esp = CreateTab("Esp"),
    Auto = CreateTab("AutoFarms"),
    Settings = CreateTab("Settings"),
}

-- Tab buttons
local TabButtons = Instance.new("Frame")
TabButtons.Size = UDim2.new(1, 0, 0, 25)
TabButtons.Position = UDim2.new(0, 0, 0, 45)
TabButtons.BackgroundTransparency = 1
TabButtons.Parent = MainFrame

local function AddTabButton(tabName)
    local Button = Instance.new("TextButton")
    Button.Size = UDim2.new(0, 100, 1, 0)
    Button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    Button.Text = tabName
    Button.Font = Enum.Font.Gotham
    Button.TextColor3 = Color3.fromRGB(255, 255, 255)
    Button.TextSize = 14
    Button.Parent = TabButtons

    Button.MouseButton1Click:Connect(function()
        for _, tab in pairs(Tabs) do
            tab.Visible = false
        end
        Tabs[tabName].Visible = true
    end)
end

AddTabButton("Esp")
AddTabButton("Auto")
AddTabButton("Settings")
Tabs.Esp.Visible = true -- default

-- Helper: toggles
local function AddToggle(tab, text, callback)
    local Button = Instance.new("TextButton")
    Button.Size = UDim2.new(1, -10, 0, 30)
    Button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    Button.Text = "[OFF] " .. text
    Button.TextColor3 = Color3.fromRGB(255, 255, 255)
    Button.Font = Enum.Font.Gotham
    Button.TextSize = 14
    Button.Parent = tab

    local state = false
    Button.MouseButton1Click:Connect(function()
        state = not state
        Button.Text = (state and "[ON] " or "[OFF] ") .. text
        callback(state)
    end)
end

-- ESP toggles
AddToggle(Tabs.Esp, "Show Chests", function(val)
    showChests = val
end)

AddToggle(Tabs.Esp, "Show Ore Title", function(val)
    showOre = val
end)

AddToggle(Tabs.Esp, "Show Traveling Shop", function(val)
    showShop = val
end)

AddToggle(Tabs.Esp, "Meteor Notify", function(val)
    meteorNotify = val
end)

-- Auto toggles
AddToggle(Tabs.Auto, "Auto Fish", function(val)
    autofish = val
end)

-- Settings
local CloseBtn = Instance.new("TextButton")
CloseBtn.Size = UDim2.new(1, -10, 0, 30)
CloseBtn.BackgroundColor3 = Color3.fromRGB(150, 50, 50)
CloseBtn.Text = "Unload GUI"
CloseBtn.Font = Enum.Font.GothamBold
CloseBtn.TextSize = 14
CloseBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseBtn.Parent = Tabs.Settings
CloseBtn.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)

-- Toggle GUI visibility with V
UserInputService.InputBegan:Connect(function(input, gpe)
    if not gpe and input.KeyCode == Enum.KeyCode.V then
        MainFrame.Visible = not MainFrame.Visible
    end
end)

----------------------------------------------------------------------------------
-- === Logic wiring ===

-- Meteor notifications
workspace.ChildAdded:Connect(function(child)
    if child.Name == "Meteor" and meteorNotify then
        game.StarterGui:SetCore("SendNotification", {
            Title = "Meteor!",
            Text = "A meteor has spawned!",
            Duration = 5
        })
    end
end)

-- Autofish loop
task.spawn(function()
    while task.wait() do
        if autofish then
            for i,v in pairs(workspace:GetChildren()) do
                if v.Name == "Bobber" then
                    if v:FindFirstChild("Attachment") and v.Attachment:FindFirstChild("Hooked") then
                        if v.Attachment.Hooked.Enabled then
                            vu:Button1Down(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
                            vu:Button1Up(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
                        end
                    end
                end
            end
        end
    end
end)
