-- Load Kavo UI Library
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Mob Teleport GUI", "DarkTheme")

local TeleportTab = Window:NewTab("Teleport")
local TeleportSection = TeleportTab:NewSection("Mob Teleport")

-- Player reference
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")

player.CharacterAdded:Connect(function(newChar)
    character = newChar
    hrp = character:WaitForChild("HumanoidRootPart")
end)

-- Name patterns for mobs
local mobPatterns = {
    "Glutto",
    "Twigface"
}

-- Recursive function to find all matching BaseParts
local function findMobParts(parent)
    local parts = {}
    for _, child in pairs(parent:GetDescendants()) do
        for _, pattern in ipairs(mobPatterns) do
            if child:IsA("BasePart") and child.Name:find(pattern) then
                table.insert(parts, child)
            end
        end
    end
    return parts
end

-- === Universal toggle ===
local teleporting = false
TeleportSection:NewToggle("Auto Teleport Behind Mobs", "Teleports behind all matching mobs", function(state)
    teleporting = state
    if teleporting then
        task.spawn(function()
            while teleporting do
                if hrp and workspace:FindFirstChild("Mobs") then
                    local targets = findMobParts(workspace.Mobs)
                    for _, part in ipairs(targets) do
                        if part and part:IsDescendantOf(workspace) then
                            hrp.CFrame = part.CFrame * CFrame.new(0, 0, 5)
                            task.wait(0.2) -- small delay between mobs
                        end
                    end
                end
                task.wait(0.5) -- refresh for respawns
            end
        end)
    end
end)
